@using UniversityCourseAndResultManagement.Models.EntityModels

@{
    ViewBag.Title = "View Result";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<Student> students = ViewBag.Students;
}

<h2>View Result</h2>
<hr/>
<form method="POST" id="viewResultForm">
    <table style="width: 50%; font-size: 20px">
        <tr>
            <td></td>
            <td></td>
            <td style="padding: 15px"><label for="StudentRegNo">Student Reg. No.</label></td>
            <td style="padding: 15px">
                <select id="StudentRegNo" name="StudentRegNo" required="required">
                    <option value="">-Select-</option>
                    @foreach (Student student in students)
                    {
                        <option value="@student.Id">@student.RegNo</option>
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <td style="padding: 15px"><label for="StudentName">Name</label></td>
            <td style="padding: 15px"><input type="text" id="StudentName" name="StudentName" readonly="readonly" placeholder="Student's Name" /></td>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <td style="padding: 15px"><label for="StudentEmail">Email</label></td>
            <td style="padding: 15px"><input type="text" id="StudentEmail" name="StudentEmail" readonly="readonly" placeholder="Student's Email" /></td>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <td style="padding: 15px"><label for="StudentDepartment">Department</label></td>
            <td style="padding: 15px"><input type="text" id="StudentDepartment" name="StudentDepartment" readonly="readonly" placeholder="Department" /></td>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <td style="padding: 15px"><input type="submit" value="Make PDF" /></td>
        </tr>
    </table>
    <br/>
    <hr/>
    <h3>View Result</h3>
    <br />
    <hr />
    <br />
    <table class="table table-striped table-bordered" id="GradeTable" style="font-size: 20px">
        <thead>
            <tr>
                <th style="border: 1px solid #ddd; text-align: left; padding: 15px">Course Code</th>
                <th style="border: 1px solid #ddd; text-align: left; padding: 15px">Name/Title</th>
                <th style="border: 1px solid #ddd; text-align: left; padding: 15px">Grade</th>
            </tr>
        </thead>
        <tbody id="GradeTableBody"></tbody>
    </table>
</form>


@section scripts
{
    <script>

        $(document).ready(function() {
            $("#StudentRegNo").change(function() {

                $("#GradeTableBody").empty();
                var deptId;
                var Id = $("#StudentRegNo").val();
                var json = { Id: Id };
                $.ajax({
                    async: false,
                    type: "POST",
                    url: '@Url.Action("GetStudentByRegno", "Home")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function(data) {
                        $("#StudentName").val(data.student.StudentName);
                        $("#StudentEmail").val(data.student.Email);
                        $("#StudentId").val(data.student.Id);

                        $("#StudentDepartment").val(data.deptName.DepartmentName);
                        deptId = data.student.DepartmentId;
                        //alert("Success " + deptId);
                    }
                });
                // $("#courseTableBody").append('<tr><td>' + value.CourseCode + '</td><td>' + value.CourseName + '</td><td>' + value.SemesterId + '</td><td>' + teacherName + '</td></tr>');


                var enrollCourseJson = { studentId: Id };

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetCoursesByStudentId", "Home")',
                    //url: '/Department/GetStudentsByDepartmentId',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(enrollCourseJson),
                    success: function(data) {
                        $.each(data, function(key, value) {
                            var courseJson = { courseId: value.CourseId };
                            $("#GradeTableBody").empty();

                            $.ajax({
                                type: "POST",
                                url: '@Url.Action("GetCoursesByCourseId", "Home")',
                                //url: '/Department/GetStudentsByDepartmentId',
                                contentType: "application/json; charset=utf-8",
                                data: JSON.stringify(courseJson),
                                success: function(inData) {
                                    $.each(inData, function(key, value) {
                                        
                                        var gradeText = "Not Graded yet!!";
                                        //methoddd
                                        //alert(value.CourseId );
                                        var gradeJson = { courseId: value.Id, studentId: Id };

                                        $.ajax({
                                            async: false,
                                            type: "POST",
                                            url: '@Url.Action("GetGradeByCourseAndStudentId", "Home")',
                                            //url: '/Department/GetStudentsByDepartmentId',
                                            contentType: "application/json; charset=utf-8",
                                            data: JSON.stringify(gradeJson),
                                            success: function (gradeData) {
                                               // alert("Grade "+gradeData);
                                                if (!$.trim(gradeData.Grade)) {
                                                   // alert("What follows is blank: " + gradeData);
                                                    gradeText = "Not Graded Yet";
                                                }
                                                else {
                                                    //alert(gradeData.Grade);
                                                    gradeText = gradeData.Grade;
                                                }

                                            }
                                        });
                                        //methodd


                                        $("#GradeTableBody").append('<tr><td>' + value.CourseCode + '</td><td>' + value.CourseName + '</td><td>' + gradeText + '</td></tr>');
                                    });
                                }
                            });
                            //alert(value.Id);
                        });
                        //alert("Finish"+deptId);
                    }
                });


            });
        });
    </script>
}
